{"version":3,"sources":["registration.js","yourdetails.js","App.js","reportWebVitals.js","index.js"],"names":["Registration","processFirstname","obj","setState","firstname","target","value","processLaststname","lastname","processDateofbirth","dateofbirth","processGender","gender","processEmail","email","processMobile","mobile","processState","state","processDist","dist","processAddress","addr","processInput","inputfield","name","save","newUser","axios","post","then","response","preventDefault","fielderror","formStatus","test","msg","message","fieldList","className","this","onSubmit","type","minLength","maxLength","placeholder","onChange","firstnameerror","processLastname","format","dateofbirtherror","emailerror","mobileerror","stateerror","disterror","rows","const","path","Component","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e4cfab5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n// import React, { useState , useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Registration extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fieldList: [],\r\n            inputfield: {},\r\n            fielderror: {},\r\n            message: '',\r\n            firstname: '',\r\n            lastname: '',\r\n            dateofbirth: '',\r\n            gender: '',\r\n            email: '',\r\n            mobile: '',\r\n            addr: ''\r\n        }\r\n    }\r\n\r\n    processFirstname = (obj) => {\r\n        this.setState({ firstname: obj.target.value })\r\n    }\r\n\r\n    processLaststname = (obj) => {\r\n        this.setState({ lastname: obj.target.value })\r\n    }\r\n\r\n    processDateofbirth = (obj) => {\r\n        this.setState({ dateofbirth: obj.target.value })\r\n    }\r\n\r\n    processGender = (obj) => {\r\n        this.setState({ gender: obj.target.value })\r\n    }\r\n\r\n    processEmail = (obj) => {\r\n        this.setState({ email: obj.target.value })\r\n    }\r\n\r\n    processMobile = (obj) => {\r\n        this.setState({ mobile: obj.target.value })\r\n    }\r\n\r\n    processState = (obj) => {\r\n        this.setState({ state: obj.target.value })\r\n    }\r\n\r\n    processDist = (obj) => {\r\n        this.setState({ dist: obj.target.value })\r\n    }\r\n\r\n    processAddress = (obj) => {\r\n        this.setState({ addr: obj.target.value })\r\n    }\r\n\r\n    processInput = (obj) => {\r\n        let inputfield = this.state.inputfield;\r\n        inputfield[obj.target.name] = obj.target.value;\r\n\r\n        this.setState({\r\n            inputfield\r\n        })\r\n    }\r\n\r\n    save = (obj) => {\r\n        let newUser = {\r\n            \"firstname\": this.state.firstname,\r\n            \"lastname\": this.state.lastname,\r\n            \"dateofbirth\": this.state.dateofbirth,\r\n            \"gender\": this.state.gender,\r\n            \"email\": this.state.email,\r\n            \"mobile\": this.state.mobile,\r\n            \"addr\": this.state.addr\r\n        }\r\n\r\n        let url = \"http://localhost:3001/users\";\r\n        axios.post(url, newUser).then(response=>{\r\n            this.setState({\r\n                firstname:'',\r\n                lastname:'',\r\n                dateofbirth:'',\r\n                gender:'',\r\n                email:'',\r\n                mobile:'',\r\n                addr:''\r\n            })\r\n        })\r\n\r\n        obj.preventDefault();\r\n        let fielderror = this.state.fielderror;\r\n        let inputfield = this.state.inputfield;\r\n        let formStatus = true;\r\n\r\n        //for firstname\r\n        if (!inputfield['firstname']) {\r\n            formStatus = false;\r\n            fielderror['firstnameerror'] = \"Please enter your name !\";\r\n        } else {\r\n            fielderror[\"firstnameerror\"] = \"\";\r\n        }\r\n\r\n        // //for DOB\r\n        // let dpattern = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/;\r\n\r\n        // if (!dpattern.test(inputfield['dateofbirth'])) {\r\n        //     formStatus = false;\r\n        //     fielderror['dateofbirtherror'] = \"Please enter your DOB...\";\r\n        // } else {\r\n        //     fielderror['dateofbirtherror'] = \"\";\r\n        // }\r\n\r\n        //getting error in date of birth field at the time of validation\r\n\r\n\r\n        //for email\r\n        let epattern = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\r\n\r\n        if (!epattern.test(inputfield['email'])) {\r\n            formStatus = false;\r\n            fielderror['emailerror'] = \"Please enter your Email-id !\";\r\n        } else {\r\n            fielderror[\"emailerror\"] = \"\";\r\n        }\r\n\r\n        //for mobile\r\n        let mpattern = /^[6-9]\\d{9}$/;\r\n\r\n        if (!mpattern.test(inputfield['mobile'])) {\r\n            formStatus = false;\r\n            fielderror['mobileerror'] = \"Please enter your 10 digit mobile no. !\";\r\n        } else {\r\n            fielderror[\"mobileerror\"] = \"\";\r\n        }\r\n\r\n        //for state\r\n        if (!inputfield['state']) {\r\n            formStatus = false;\r\n            fielderror['stateerror'] = \"Please select your state !\";\r\n        } else {\r\n            fielderror[\"stateerror\"] = \"\";\r\n        }\r\n\r\n        //for district\r\n        if (!inputfield['dist']) {\r\n            formStatus = false;\r\n            fielderror['disterror'] = \"Please select your district !\";\r\n        } else {\r\n            fielderror[\"disterror\"] = \"\";\r\n        }\r\n\r\n        //for message\r\n        let msg = \"\";\r\n        if (formStatus == true) {\r\n            msg = \"Data save successfully...\"\r\n        } else {\r\n            msg = \"Failed : Invalid input...\"\r\n        }\r\n\r\n        this.setState({\r\n            fielderror,\r\n            message: msg\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-2\"></div>\r\n                    <div className=\"col-lg-8\">\r\n                        <div className=\"bg-white p-4\">\r\n                            <h3 className=\"text-center text-primary\"> User Registration </h3>\r\n                            <p className=\"text-warning\"> {this.state.message} </p>\r\n                            <form onSubmit={this.save}>\r\n                                <fieldset>\r\n                                    <div className=\"row form-group mb-3\">\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> First Name <sup className=\"text-danger\">*</sup></label>\r\n                                            <input type=\"text\" className=\"form-control\" minLength=\"3\" maxLength=\"20\" name=\"firstname\" placeholder=\"Enter first name\" onChange={this.processFirstname} onChange={this.processInput} />\r\n                                            <i className=\"text-danger\">{this.state.fielderror.firstnameerror}</i>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> Last Name </label>\r\n                                            <input type=\"text\" className=\"form-control input-box\" maxLength=\"20\" name=\"lastname\" placeholder=\"Enter last name\" onChange={this.processLastname} onChange={this.processInput} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group mb-3\">\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> Gender <sup className=\"text-danger\">*</sup> </label>\r\n                                            <input type=\"radio\" name=\"gender\" value=\"male\" onChange={this.processGender} />Male\r\n                                            <input type=\"radio\" name=\"gender\" value=\"female\" onChange={this.processGender} />Female\r\n                                        </div>\r\n                                        <div className=\"col-lg-6 input-group-date\">\r\n                                            <label> Date of Birth <sup className=\"text-danger\">*</sup> </label>\r\n                                            <input type=\"date\" format={\"DD-MM-YYYY\"} name=\"dateofbirth\" className=\"form-control\" onChange={this.processDateofbirth} onChange={this.processInput} />\r\n                                            <i className=\"text-danger\"> {this.state.fielderror.dateofbirtherror} </i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group mb-3\">\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> Email <sup className=\"text-danger\">*</sup> </label>\r\n                                            <input type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Enter your email\" onChange={this.processEmail} onChange={this.processInput} />\r\n                                            <i className=\"text-danger\"> {this.state.fielderror.emailerror} </i>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> Mobile Number </label>\r\n                                            <input type=\"number\" className=\"form-control\" name=\"mobile\" placeholder=\"Enter your mobile no.\" onChange={this.processMobile} onChange={this.processInput} />\r\n                                            <i className=\"text-danger\"> {this.state.fielderror.mobileerror} </i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group mb-3\">\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> State <sup className=\"text-danger\">*</sup> </label>\r\n                                            <select className=\"form-control\" name=\"state\" onChange={this.processState} onChange={this.processInput} >\r\n                                                <option value=\"\">Choose</option>\r\n                                                <option value=\"abc\">abc</option>\r\n                                                <option value=\"def\">def</option>\r\n                                                <option value=\"ghi\">ghi</option>\r\n                                            </select>\r\n                                            <i className=\"text-danger\"> {this.state.fielderror.stateerror} </i>\r\n                                        </div>\r\n                                        <div className=\"col-lg-6\">\r\n                                            <label> District <sup className=\"text-danger\">*</sup> </label>\r\n                                            <select className=\"form-control\" name=\"dist\" onChange={this.processDist} onChange={this.processInput} >\r\n                                                <option value=\"\">Choose</option>\r\n                                                <option value=\"abc\">abc</option>\r\n                                                <option value=\"def\">def</option>\r\n                                                <option value=\"ghi\">ghi</option>\r\n                                            </select>\r\n                                            <i className=\"text-danger\"> {this.state.fielderror.disterror} </i>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row form-group mb-3\">\r\n                                        <label>Address</label>\r\n                                        <textarea className=\"form-control\" rows=\"2\" maxLength=\"500\" name=\"addr\" placeholder=\"Enter your address\" onChange={this.processAddress} onChange={this.processInput} />\r\n                                    </div>\r\n                                    <div className=\"row from-group mb-3\">\r\n                                        <div className=\"col-lg-6\"></div>\r\n                                        <div className=\"col-lg-6\">\r\n                                            <button type=\"submit\" const path='/yourdetails' className=\"btn btn-primary float-right\">Register</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </fieldset>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-2\"></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Registration;","import React, { Component } from 'react';\r\nclass YourDetails extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            recordList: []\r\n        }\r\n    }\r\n\r\n    getRecord = () => {\r\n        fetch(\"data.json\")\r\n            .then(response => response.json())\r\n            .then(result => this.setState({\r\n                recordList: result\r\n            }))\r\n    }\r\n\r\n    getStateDist = () => {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRecord();\r\n        this.getStateDist();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 text-center mb-4\">\r\n                        <h3 className=\"text-info\"> Your Details </h3>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th> Name: </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> DoB: </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Gender: </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Email: </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Mobile: </th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Address: </th>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </thead>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default YourDetails;","import './App.css';\nimport React from 'react';\nimport {HashRouter , Route} from 'react-router-dom';\nimport Registration from './registration';\nimport YourDetails from './yourdetails';\n\nfunction App() {\n  return (\n    <HashRouter>\n        <Route exact path=\"/\" component={Registration}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}